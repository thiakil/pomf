CLASS el net/minecraft/util/math/Facing
	CLASS el$a Axis
		CLASS el$a$1
			METHOD a getAxisValue (DDD)D
				ARG 0 xIn
				ARG 1 yIn
				ARG 2 zIn
			METHOD a getAxisValue (III)I
				ARG 0 xIn
				ARG 1 yIn
				ARG 2 zIn
		CLASS el$a$2
			METHOD a getAxisValue (DDD)D
				ARG 0 xIn
				ARG 1 yIn
				ARG 2 zIn
			METHOD a getAxisValue (III)I
				ARG 0 xIn
				ARG 1 yIn
				ARG 2 zIn
		CLASS el$a$3
			METHOD a getAxisValue (DDD)D
				ARG 0 xIn
				ARG 1 yIn
				ARG 2 zIn
			METHOD a getAxisValue (III)I
				ARG 0 xIn
				ARG 1 yIn
				ARG 2 zIn
		FIELD a X Lel$a;
		FIELD b Y Lel$a;
		FIELD c Z Lel$a;
		FIELD d NAME_TO_AXIS Ljava/util/Map;
		FIELD e nameLowerCase Ljava/lang/String;
		FIELD f plane Lel$c;
		METHOD a getAxisName ()Ljava/lang/String;
		METHOD a getAxisValue (DDD)D
			ARG 0 xIn
			ARG 1 yIn
			ARG 2 zIn
		METHOD a getAxisValue (III)I
			ARG 0 xIn
			ARG 1 yIn
			ARG 2 zIn
		METHOD a (Lel;)Z
			ARG 0 facing
		METHOD a byName (Ljava/lang/String;)Lel$a;
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getPlane ()Lel$c;
		METHOD m asString ()Ljava/lang/String;
	CLASS el$b Direction
		FIELD a POSITIVE Lel$b;
		FIELD b NEGATIVE Lel$b;
		FIELD c offset I
		FIELD d desc Ljava/lang/String;
		METHOD a offset ()I
	CLASS el$c Plane
		FIELD a HORIZONTAL Lel$c;
		FIELD b VERTICAL Lel$c;
		METHOD a getFacings ()[Lel;
		METHOD a apply (Lel;)Z
		METHOD a getRandomFacing (Ljava/util/Random;)Lel;
		METHOD iterator iterator ()Ljava/util/Iterator;
	FIELD a DOWN Lel;
	FIELD b UP Lel;
	FIELD c NORTH Lel;
	FIELD d SOUTH Lel;
	FIELD e WEST Lel;
	FIELD f EAST Lel;
	FIELD g id I
	FIELD h idOpposite I
	FIELD i idHorizontal I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lel$a;
	FIELD l direction Lel$b;
	FIELD m vector Lfb;
	FIELD n VALUES_COPY [Lel;
	FIELD o NAME_LOOKUP Ljava/util/Map;
	FIELD p VALUES [Lel;
	FIELD q HORIZONTALS [Lel;
	METHOD <init> (Ljava/lang/String;IIIILjava/lang/String;Lel$b;Lel$a;Lfb;)V
		ARG 0 id
		ARG 1 idOpposite
		ARG 2 index
		ARG 3 opposite
		ARG 4 horizontal
		ARG 5 name
		ARG 6 direction
		ARG 7 axis
		ARG 8 vec
	METHOD a getId ()I
	METHOD a fromRotation (D)Lel;
		ARG 0 rotation
	METHOD a getFacing (FFF)Lel;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD a byId (I)Lel;
		ARG 0 id
	METHOD a rotateClockwise (Lel$a;)Lel;
		ARG 0 axis
	METHOD a get (Lel$b;Lel$a;)Lel;
		ARG 0 direction
		ARG 1 axis
	METHOD a byName (Ljava/lang/String;)Lel;
		ARG 0 name
	METHOD a random (Ljava/util/Random;)Lel;
		ARG 0 rand
	METHOD b getHorizontal ()I
	METHOD b fromHorizontal (I)Lel;
		ARG 0 value
	METHOD c getDirection ()Lel$b;
	METHOD d getOpposite ()Lel;
	METHOD e rotateYClockwise ()Lel;
	METHOD f rotateYCounterclockwise ()Lel;
	METHOD g getOffsetX ()I
	METHOD h getOffsetY ()I
	METHOD i getOffsetZ ()I
	METHOD j getName ()Ljava/lang/String;
	METHOD k getAxis ()Lel$a;
	METHOD l asRotation ()F
	METHOD m asString ()Ljava/lang/String;
	METHOD n getVector ()Lfb;
	METHOD o rotateXClockwise ()Lel;
	METHOD q rotateZClockwise ()Lel;
	METHOD values values ()[Lel;
